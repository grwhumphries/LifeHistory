View(df)
library(dplyr)
setwd("C:/LifeHistory/database_build/")
X <- read.csv("traits_new.csv")
Y <- names(X)
### Selects mean, uppers and lowers column names
meansvals <- lapply(Y,function(x) grep(pattern="*mean",x))
means <- Y[which(meansvals == 1)]
rangevals <- lapply(Y,function(x) grep(pattern="*range",x))
ranges <- Y[which(rangevals == 1)]
uncertvals <- lapply(Y,function(x) grep(pattern="*uncertainty",x))
uncert <- Y[which(uncertvals == 1)]
### Bind together the others, and find all variables that aren't in that list already
Z <- c(means,ranges,uncert)
Ytb <- tbl_df(data.frame(Y))
others <- Ytb %>% filter(!Y %in% Z)
othervars <- c(as.character(others$Y))[3:(nrow(others)-3)]
############################################################################################
## trim "mean" off var names ##
vars1 <- sapply(1:length(means), function(x) substr(means[[x]],1,(nchar(means[[x]])-5)))
#### Merge vars together
varnames <- c(vars1,othervars)
## Create varname field
traits <- rep(varnames,nrow(X))
species_ids <- as.character(unlist(lapply(X$species_id, function(x) rep(x,length(varnames)))))
####################
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits )
View(df)
varnames
gsub("_"," ",varnames)
varnames <- gsub("_"," ",varnames)
## Create varname field
traits <- rep(varnames,nrow(X))
species_ids <- as.character(unlist(lapply(X$species_id, function(x) rep(x,length(varnames)))))
####################
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits )
View(df)
X[i,]
X[1,]
X[1,"female_mass_mean"]
as.double(X[1,"female_mass_mean"])
as.double(as.character(X[1,"female_mass_mean"]))
means
traits
varnames
means
vars1
femaledat <- Y[which(lapply(Y,function(x) grep(pattern="female_mass",x)) == 1)]
femaledat
tst <- X[1,]
txt
tst
dat <- X[1,femaledat]
dat
femaledat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="female_mass",x)) == 1)]]
femaledat
varnames1 <- c(vars1,othervars)
varnames <- gsub("_"," ",varnames1)
varnames1
for(j in varnames1){
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="j",x)) == 1)]]
print(dat)
}
dat
for(j in varnames1){
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=j,x)) == 1)]]
print(dat)
}
library(dplyr)
setwd("C:/LifeHistory/database_build/")
X <- read.csv("traits_new.csv")
Y <- names(X)
### Selects mean, uppers and lowers column names
meansvals <- lapply(Y,function(x) grep(pattern="*mean",x))
means <- Y[which(meansvals == 1)]
rangevals <- lapply(Y,function(x) grep(pattern="*range",x))
ranges <- Y[which(rangevals == 1)]
uncertvals <- lapply(Y,function(x) grep(pattern="*uncertainty",x))
uncert <- Y[which(uncertvals == 1)]
### Bind together the others, and find all variables that aren't in that list already
Z <- c(means,ranges,uncert)
Ytb <- tbl_df(data.frame(Y))
others <- Ytb %>% filter(!Y %in% Z)
othervars <- c(as.character(others$Y))[3:(nrow(others)-3)]
############################################################################################
## trim "mean" off var names ##
vars1 <- sapply(1:length(means), function(x) substr(means[[x]],1,(nchar(means[[x]])-5)))
#### Merge vars together
varnames1 <- c(vars1,othervars)
varnames <- gsub("_"," ",varnames1)
## Create varname field
traits <- rep(varnames,nrow(X))
species_ids <- as.character(unlist(lapply(X$species_id, function(x) rep(x,length(varnames)))))
####################
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits )
varnames
for(j in varnames1){
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=j,x)) == 1)]]
print(dat)
}
varnames
vars1
othervars
varnames1 <- c(vars1)
varnames <- gsub("_"," ",varnames1)
## Create varname field
traits <- rep(varnames,nrow(X))
species_ids <- as.character(unlist(lapply(X$species_id, function(x) rep(x,length(varnames)))))
####################
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits )
for(j in varnames1){
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=j,x)) == 1)]]
print(dat)
}
varnames1
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="*male_mass",x)) == 1)]]
dat
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="$male_mass",x)) == 1)]]
dat
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="male_mass$",x)) == 1)]]
dat
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="\\male_mass*",x)) == 1)]]
dat
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern="\\bmale_mass*",x)) == 1)]]
dat
pattern <- paste("\\b",j,"*",sep="")
pattern
for(j in varnames1){
pattern <- paste("\\b",j,"*",sep="")
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
print(dat)
}
for(j in varnames1){
pattern <- paste("\\b",j,"*",sep="")
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
print(dat)
}
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
return(dat)
}
library(foreach)
library(foreach)
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
return(dat)
}
View(OUT)
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[1,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
dat$mean<-as.numeric(dat$mean)
return(dat)
}
View(OUT)
i <- 1
which[,df$species_id ==X$species_id[i]]
which(df$species_id ==X$species_id[i])
i <- 2
which(df$species_id ==X$species_id[i])
OUT
i <- 1
INDEX <- which(df$species_id ==X$species_id[i])
df[INDEX,4:6] <- OUT
df[c(INDEX),4:6] <- OUT
tst <- matrix(df)
tst[INDEX,4:6] <- OUT
tst[INDEX,4:6]
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=NULL,range=NULL,uncertainty=NULL )
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=rep(NULL,length(varnames)),range=rep(NULL,length(varnames)),uncertainty=rep(NULL,length(varnames)))
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=rep(NA,length(varnames)),range=rep(NA,length(varnames)),uncertainty=rep(NA,length(varnames)))
tst <- matrix(df)
tst[INDEX,4:6] <- OUT
tst[INDEX,4:6]
list(INDEX)
INDEX
min(INDEX)
max(INDEX)
tst[min(INDEX):max(INDEX),4:6] <- OUT
tst[min(INDEX):max(INDEX),4:6]
tst[min(INDEX):max(INDEX),]
tst
df
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=rep(NA,length(varnames)),range=rep(NA,length(varnames)),uncertainty=rep(NA,length(varnames)))
tst<-as.matrix(df)
tst
tst[min(INDEX):max(INDEX),4:6] <- OUT
tst
View(tst)
OUT
mat <- as.matrix(df)
mat[INDEX,4:6] <- OUT
mat
mat[INDEX,"mean"] <- OUT$mean
mat[INDEX,4] <- OUT$mean
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=rep(NA,length(varnames)),range=rep(NA,length(varnames)),uncertainty=rep(NA,length(varnames)))
df$mean[INDEX] <- OUT$mean
View(df)
df <- data.frame(feature_id = c(1:length(traits)), species_id = species_ids, traits = traits, mean=rep(NA,length(varnames)),range=rep(NA,length(varnames)),uncertainty=rep(NA,length(varnames)))
for(i in 1:nrow(X)){
cat(i,"\n")
INDEX <- which(df$species_id ==X$species_id[i])
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[i,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
dat$mean<-as.numeric(dat$mean)
return(dat)
}
df$mean[INDEX] <- OUT$mean
df$range[INDEX] <- OUT$range
df$uncertainty[INDEX] <- OUT$uncertainty
}
View(df)
for(i in 1:nrow(X)){
cat(i,"\n")
INDEX <- which(df$species_id ==X$species_id[i])
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[i,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
dat$mean<-as.numeric(dat$mean)
dat$range<-as.character(dat$range)
dat$uncertainty<-as.character(dat$uncertainty)
return(dat)
}
df$mean[INDEX] <- OUT$mean
df$range[INDEX] <- OUT$range
df$uncertainty[INDEX] <- OUT$uncertainty
}
View(df)
for(i in 1:nrow(X)){
cat(i,"\n")
INDEX <- which(df$species_id ==X$species_id[i])
OUT <- foreach(j = varnames1,.combine='rbind') %do%{
pattern <- paste("\\b",j,"*",sep="")
dat <- X[i,Y[which(lapply(Y,function(x) grep(pattern=pattern,x)) == 1)]]
names(dat)<-c("mean","range","uncertainty")
dat$mean<-as.character(dat$mean)
dat$range<-as.character(dat$range)
dat$uncertainty<-as.character(dat$uncertainty)
return(dat)
}
df$mean[INDEX] <- OUT$mean
df$range[INDEX] <- OUT$range
df$uncertainty[INDEX] <- OUT$uncertainty
}
View(df)
write.csv(df,"newtraits.csv",row.names=F)
setwd("C:/LifeHistory/database_build/")
X <- read.csv("Citation_Workbook.csv")
setwd("C:/LifeHistory/database_build/")
X <- read.csv("Citation_Workbook.csv")
Y <- read.csv("CSVs_for_db/citation.csv")
for(i in 1:nrow(Y)){
index <- which(X$citation_name == Y$citation_name[i])
X[index,2] <- Y$cite_id[i]
}
View(X)
for(i in 1:nrow(Y)){
index <- which(X$citation_name == Y$citation_name[i])
X[index,2] <- as.character(Y$cite_id[i])
}
View(X)
write.csv(X,"species_citation.csv",row.names=F\)
write.csv(X,"species_citation.csv",row.names=F\)
write.csv(X,"species_citation.csv",row.names=F)
X <- data.frame(relation_id=c(1:nrow(X)),X)
View()
View(X)
write.csv(X,"species_citation.csv",row.names=F)
setwd("C:/LifeHistory/database_build/CSVs_for_db/")
setwd("C:/LifeHistory/database_build/")
X <- read.csv("CSVs_for_db/species_citation.csv")
Y <- read.csv("newtraits.csv")
setwd("C:/LifeHistory/database_build/")
X <- read.csv("CSVs_for_db/species_citation.csv")
Y <- read.csv("newtraits.csv")
speclist <- unique(X$species_id)
s <- "Aethia cristatella"
featureids <- Y$feature_id[which(Y$species_id == s)]
spcs <- length(which(X$species_id) == s))
spcs <- length(which(X$species_id) == s)
spcs <- length(which(X$species_id == s))
which(X$species_id == s)
setwd("C:/LifeHistory/database_build/CSVs_for_db/")
X <- read.csv("species.csv")
Y <- read.csv("species_citation.csv")
for(i in 1:nrow(X)){
Index <- which(Y$species_id == X$species_id_html[i])
Y[Index,2] <- X$species_id[i]
}
for(i in 1:nrow(X)){
Index <- which(Y$species_id == X$species_id_html[i])
Y[Index,2] <- as.character(X$species_id[i])
}
for(i in 1:nrow(X)){
Index <- which(as.character(Y$species_id) == as.character(X$species_id_html[i]))
Y[Index,2] <- as.character(X$species_id[i])
}
warnings()
View(X)
View(Y)
i <- 1
Index <- which(as.character(Y$species_id) == as.character(X$species_id_html[i]))
Index
X$species_id_html[1]
Index <- which(Y$species_id == as.character(X$species_id_html[i]))
Index
Y$species_id
Y <- read.csv("species_citation.csv")
X <- read.csv("species.csv")
Y <- read.csv("species_citation.csv")
for(i in 1:nrow(X)){
Index <- which(Y$species_id == as.character(X$species_id_html[i]))
Y[Index,2] <- as.character(X$species_id[i])
}
View(Y)
Y <- read.csv("species_citation.csv")
which(Y$species_id == as.character(X$species_id_html[i]))
as.character(X$species_id[i])
i <- 1
Index <- which(Y$species_id == as.character(X$species_id_html[i]))
Y[Index,2] <- as.character(X$species_id[i])
Y <- read.csv("species_citation.csv")
Y$species_id <- as.character(Y$species_id)
Index <- which(Y$species_id == as.character(X$species_id_html[i]))
Y[Index,2] <- as.character(X$species_id[i])
for(i in 1:nrow(X)){
Index <- which(Y$species_id == as.character(X$species_id_html[i]))
Y[Index,2] <- as.character(X$species_id[i])
}
View(Y)
write.csv(Y,"species_citation.csv",row.names=F)
write.csv(Y,"species_citation.csv",row.names=F)
setwd("C:/LifeHistory/database_build/")
X <- read.csv("CSVs_for_db/species_citation.csv")
Y <- read.csv("newtraits.csv")
speclist <- unique(X$species_id)
s
featureids <- Y$feature_id[which(Y$species_id == s)]
spcs <- length(which(X$species_id == s))
reps <- rep(featureids,spcs)
resps
reps
citeids <- X[featureids,3]
citeids
citeids <- X[sps,3]
citeids <- X[spcs,3]
citeids
citeids <- X[spcs,]
citeids
spcs
J <- which(X$species_id == s)
spcs <- length(J)
citeids <- X[J,3]
citeids
citeids <- as.character(X[J,3])
citeids
library(foreach)
tst<-lapply(citeids,function(x) rep(x,30))
tst
tst<-unlist(lapply(citeids,function(x) rep(x,30)))
tst
reps
df <- data.frame(feature_id = reps,cite_id = cites)
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
df
setwd("C:/LifeHistory/database_build/")
X <- read.csv("CSVs_for_db/species_citation.csv")
Y <- read.csv("newtraits.csv")
library(foreach)
speclist <- unique(X$species_id)
OUT <- foreach(s = speclist,.combine='rbind') %do% {
featureids <- Y$feature_id[which(Y$species_id == s)]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
return(df)
}
featureids <- Y$feature_id[which(Y$species_id == s)]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
df
s
i
i <- 1
featureids <- Y$feature_id[which(Y$species_id == s)]
J <- which(X$species_id == s)
s
featureids <- Y$feature_id[which(Y$species_id == s)]
which(Y$specis_id == s)
s
speclist <- unique(X$species_id)
OUT <- foreach(s = speclist,.combine='rbind') %do% {
featureids <- Y$feature_id[which(Y$species_id == as.character(s))]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
return(df)
}
OUT
View(OUT)
write.csv(OUT,"citation_numerictrait.csv",row.names=F)
X <- read.csv("OtherData.csv")
df <- X[,8]
View(df)
df
df <- X[1:nrow(X),8]
View(df)
(reshape2)
library(reshape2)
library(dplyr)
library(foreach)
df <- X %>% select(-comments,-username,-dt)
View(df)
df2<-melt(df)
View(df2)
df2<-melt(df, id.vars=c("species_id"))
tst <- df2[order(species_id),]
tst <- df2[order(df2$species_id),]
tst
View(tst)
df2<-melt(df, id.vars=c("species_id"))
for(s in unique(df2$species_id)){
index <- length(which(df2$species_id == s))
print(length)
}
for(s in unique(df2$species_id)){
index <- length(which(df2$species_id == s))
print(index)
}
df2 <- data.frame(trtid = c(1:nrow(df2)),df2)
df2$comments <- rep(NA,nrow(df2))
df2$username <- rep('grant',nrow(df2))
df2$dt <- rep('17/07/2016',nrow(df2))
View(df2)
df2$variable <- gsub("_"," ",df2$variable)
View(df21)
View(df2)
write.csv(df2,"othertraits.csv",row.names=F)
setwd("C:/LifeHistory/database_build/CSVs_for_db/")
X <- read.csv("species_citation.csv")
Y <- read.csv("OtherData.csv")
Y <- read.csv("other_traits.csv")
speclist <- unique(X$species_id)
s <-speclist[1]
s
featureids <- Y$feature_id[which(Y$species_id == as.character(s))]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
spcs
reps
featureids <- Y$trtid[which(Y$species_id == as.character(s))]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,30)))
df <- data.frame(feature_id = reps,cite_id = cites)
unique(Y$variable)
cites<-unlist(lapply(citeids,function(x) rep(x,7)))
df <- data.frame(feature_id = reps,cite_id = cites)
df
speclist <- unique(X$species_id)
OUT <- foreach(s = speclist,.combine='rbind') %do% {
featureids <- Y$trtid[which(Y$species_id == as.character(s))]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,7)))
df <- data.frame(feature_id = reps,cite_id = cites)
return(df)
}
OUT <- data.frame(relation_id = c(1:nrow(OUT),OUT)
)
View(OUT)
OUT <- foreach(s = speclist,.combine='rbind') %do% {
featureids <- Y$trtid[which(Y$species_id == as.character(s))]
J <- which(X$species_id == s)
spcs <- length(J)
reps <- rep(featureids,spcs)
citeids <- as.character(X[J,3])
cites<-unlist(lapply(citeids,function(x) rep(x,7)))
df <- data.frame(feature_id = reps,cite_id = cites)
return(df)
}
OUT <- data.frame(relation_id = c(1:nrow(OUT)),OUT)
View(OUT)
write.csv(OUT,"citation_othertraits.csv",row.names=F)
